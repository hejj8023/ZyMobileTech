apply plugin: 'com.android.application'

// 注：需要配置符号表时，使用bugly插件
apply plugin: 'bugly'
bugly {
    appId = 'dbc711c12f'
    appKey = '80f8d48f-72f6-4cdf-a76c-6d0f12b8813a'
}

android {
    compileSdkVersion rootProject.ext._android.compileSdkVersion
    defaultConfig {
        applicationId "com.example.xiaowusong"
        minSdkVersion 21
        targetSdkVersion rootProject.ext._android.targetSdkVersion
        versionCode rootProject.ext._android.versionCode
        versionName rootProject.ext._android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true
//        multiDexEnabled true

        ndk {
            //设置支持的SO库架构
//            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'

            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64', 'mips', 'mips64'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
            // 自己测试的时时候用
            /*manifestPlaceholders = [
                    XG_ACCESS_ID : "2100292702",
                    XG_ACCESS_KEY: "A71Q2LRN92RA"
            ]*/
            manifestPlaceholders = [
                    XG_ACCESS_ID : "2100294098",
                    XG_ACCESS_KEY: "AT6444GZXL3T"
            ]
        }
    }

    buildTypes {
        release {
            minifyEnabled false // 是否混淆
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    dexOptions {
        jumboMode true
        javaMaxHeapSize "4g"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation rootProject.ext.support.appcompat
    implementation rootProject.ext.support.constraint_layout
    implementation rootProject.ext.support.design
    implementation rootProject.ext.support.cardview
    testImplementation rootProject.ext.support.junit
    androidTestImplementation rootProject.ext.support.test_runner
    androidTestImplementation rootProject.ext.support.espresso_core

    /*butternife*/
    implementation rootProject.ext.ext_tools.butterknife
    annotationProcessor rootProject.ext.ext_tools.butterknife_compiler

    implementation rootProject.ext.ext_tools.utilcode
    implementation rootProject.ext.ext_tools.gson

    implementation rootProject.ext.ext_tools.systembartint

    implementation rootProject.ext.ext_tools.logger
    compile rootProject.ext.ext_tools.eventbus
    implementation rootProject.ext.ext_tools.fragmentation
    implementation rootProject.ext.ext_tools.BaseRecyclerViewAdapter

    //SmartRefreshLayout
    implementation rootProject.ext.ext_tools.SmartRefreshLayout
    implementation rootProject.ext.ext_tools.SmartRefreshHeader

    implementation rootProject.ext.ext_tools.loadinglayout

//    implementation "com.android.support:multidex:1.0.3"

    implementation rootProject.ext.ext_tools.glide
    annotationProcessor rootProject.ext.ext_tools.glide_compiler

    implementation rootProject.ext.ext_tools.MPAndroidChart
    compile 'com.google.zxing:core:3.3.0'

    implementation rootProject.ext.ext_tools.rxjava
    implementation rootProject.ext.ext_tools.rxandroid
    implementation rootProject.ext.ext_tools.retrofit
    implementation rootProject.ext.ext_tools.converter_gson
    implementation rootProject.ext.ext_tools.adapter_rxjava2
    implementation rootProject.ext.ext_tools.okhttp
    implementation rootProject.ext.ext_tools.logging_interceptor

    // 其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.2.7
    // (注：从2.1.5开始要分开Bugly SDK和NDK的配置）
    implementation 'com.tencent.bugly:crashreport:latest.release'
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'

    implementation rootProject.ext.ext_tools.agentweb
    implementation rootProject.ext.ext_tools.barlibrary
//    compile project(':ZySdkLib')

    //信鸽推送
    compile 'com.tencent.xinge:xinge:3.1.2-beta'
    compile 'com.tencent.wup:wup:1.0.0.E-alpha'
    compile 'com.tencent.mid:mid:3.9.0-alpha'


    compile 'com.contrarywind:Android-PickerView:4.1.3'

    implementation 'com.github.syusikoku:ZYSdk:v1.0.16'

//    debugImplementation rootProject.ext.ext_tools.blockcanary_android
//    releaseCompile rootProject.ext.ext_tools.blockcanary_no_op
//
//    debugImplementation rootProject.ext.ext_tools.leakcanary_android
//    releaseCompile rootProject.ext.ext_tools.release_leakcanary_android_no_op
//    testImplementation rootProject.ext.ext_tools.test_leakcanary_android_no_op
}