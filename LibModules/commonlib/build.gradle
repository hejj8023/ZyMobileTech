apply plugin: 'com.android.library'
apply plugin: 'maven'

android {
    compileSdkVersion rootProject.ext._android.compileSdkVersion as Integer
    buildToolsVersion rootProject.ext._android.buildToolsVersion as String

    defaultConfig {
        println("${project.name}:defaultConfig")
        minSdkVersion rootProject.ext._android.minSdkVersion as Integer
        targetSdkVersion rootProject.ext._android.targetSdkVersion as Integer
    }

    buildTypes {
        println("${project.name}:buildTypes")
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

ext {
    // 从Github上clone下来的项目的本地地址
    // GITHUB_REPO_PATH = "F:\\workspace\\as\\zzg\\zysdk"
    GITHUB_REPO_PATH = "F:\\workspace\\as\\zzg\\maven_repo_sdk\\repository"
    // compile 'com.audienl:super_library:1.0.0'
    PUBLISH_GROUP_ID = 'com.szzynt'
    PUBLISH_ARTIFACT_ID = 'common_lib'
    PUBLISH_VERSION = '1.0.0'
}

dependencies {
    println("${project.name}:dependencies")
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    compile rootProject.ext.support.design
    compile rootProject.ext.support.recyclerview
    compile rootProject.ext.support.appcompat

    compile rootProject.ext.ext_tools.rxjava
    compile rootProject.ext.ext_tools.rxandroid
    compile rootProject.ext.ext_tools.logger

    /*butternife*/
    implementation rootProject.ext.ext_tools.butterknife
    annotationProcessor rootProject.ext.ext_tools.butterknife_compiler

    implementation rootProject.ext.ext_tools.utilcode

    /*butternife*/
    implementation rootProject.ext.ext_tools.glide
    annotationProcessor rootProject.ext.ext_tools.glide_compiler

    //bugly need
    // 其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.2.7
    // (注：从2.1.5开始要分开Bugly SDK和NDK的配置）
    compile 'com.tencent.bugly:crashreport:latest.release'
    compile 'com.tencent.bugly:nativecrashreport:latest.release'
}

uploadArchives {
    repositories.mavenDeployer {
        def deployPath = file(project.GITHUB_REPO_PATH)
        repository(url: "file://${deployPath.absolutePath}")
        pom.project {
            groupId project.PUBLISH_GROUP_ID
            artifactId project.PUBLISH_ARTIFACT_ID
            version project.PUBLISH_VERSION
        }
    }
}

// 源代码一起打包(不需要打包源代码的不要添加这几行)
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

artifacts {
    archives androidSourcesJar
}